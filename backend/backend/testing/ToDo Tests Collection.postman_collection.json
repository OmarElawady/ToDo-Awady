{
	"info": {
		"_postman_id": "ac6f5ba3-25e9-43a4-ba52-b72a2c86ec83",
		"name": "ToDo Tests Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22314902"
	},
	"item": [
		{
			"name": "Add and view ToDo entries",
			"item": [
				{
					"name": "Add first ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"first ToDo\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"first ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add second ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"second ToDo\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"second ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add third ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"third ToDo\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"third ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all ToDo entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add and Delete ToDo entry",
			"item": [
				{
					"name": "Add ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"new ToDo\");\r",
									"    pm.collectionVariables.set(\"id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"new ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get deleted ToDo entry",
			"item": [
				{
					"name": "Add ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"new ToDo\");\r",
									"    pm.collectionVariables.set(\"id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"new ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deleted ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add and update ToDo entry",
			"item": [
				{
					"name": "Add ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"new ToDo\");\r",
									"    pm.collectionVariables.set(\"id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"new ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"update todo\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\": \"update todo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update deleted ToDo entry",
			"item": [
				{
					"name": "Add ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(\"Response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.text).to.eql(\"new ToDo\");\r",
									"    pm.collectionVariables.set(\"id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"new ToDo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update deleted ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"text\": \"update todo\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/todo/{{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete non-existing ToDo",
			"item": [
				{
					"name": "Delete non-existing ToDo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/todo/{{nid}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"todo",
								"{{nid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:5000"
		},
		{
			"key": "URL",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "nid",
			"value": "1000"
		}
	]
}